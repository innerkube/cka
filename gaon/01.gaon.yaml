

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mariadb-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/yeshua/innerkube/cka/study/gaon/mariadb_data
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: source-code-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /home/yeshua/innerkube/cka/study/gaon/source
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-config-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /home/yeshua/innerkube/cka/study/gaon/nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: mariadb:latest
        env:
        - name: MYSQL_DATABASE
          value: "gaon"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          value: "berea6922"
        - name: MYSQL_ROOT_PASSWORD
          value: "berea6922"
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mariadb-storage
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: mariadb-storage
        hostPath:
          path: /home/yeshua/innerkube/cka/study/gaon/mariadb_data
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
spec:
  type: NodePort
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30306
  selector:
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
spec:
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      containers:
      - name: php
        image: hwlim78/gaon-php:v1.0
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /var/www/html
          name: source-code
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: source-code
        hostPath:
          path: /home/yeshua/innerkube/cka/study/gaon/source
---
apiVersion: v1
kind: Service
metadata:
  name: php
  labels:
    app: php
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: php
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: hwlim78/gaon-nginx:v1.0
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: source-code
        - mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          name: nginx-config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: source-code
        hostPath:
          path: /home/yeshua/innerkube/cka/study/gaon/source
      - name: nginx-config
        hostPath:
          path: /home/yeshua/innerkube/cka/study/gaon/nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - port: 80
      name: http
      targetPort: 80
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gaon-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: worker2.innerinfo.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80

